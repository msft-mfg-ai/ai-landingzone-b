# ------------------------------------------------------------------------------------------------------------------------
# Pipeline to deploy Azure Resources Only
# See readme file for info about the contents of the variable group
# ------------------------------------------------------------------------------------------------------------------------
name: $(date:yyyy).$(date:MM).$(date:dd)$(rev:.r)
pool:
  vmImage: ubuntu-latest

# ------------------------------------------------------------------------------------------------------------------------
trigger:
  # since this repo has both AzDO and GHA pipelines, nothing is run automatically...
  - none
  # batch: true
  # branches:
  #   include:
  #     - main
  # paths:
  #   include:
  #     - '**/*.yml'
  #     - '**/*.yaml'
  #     - '**/*.bicep'

# ----------------------------------------------------------------------------------------------------
parameters:
  - name: deployToEnvironment
    displayName: Deploy To
    type: string
    values:
      - DEV
      - QA
      - PROD
      - DEV-QA-PROD
    default: DEV
  - name: bicepVersion
    displayName: Basic or Advanced
    type: string
    values:
      - basic
      - advanced
    default: basic
  - name: appsToDeploy
    displayName: Which Apps to build and deploy?
    type: string
    values:
      - ui
      - none
    default: 'ui'
  - name: bicepDeploymentMode
    displayName: Deploy Mode
    type: string
    values:
      - Incremental
      - Validation
      - Complete
    default: Incremental
  - name: createResourceGroup
    displayName: Create Resource Group?
    type: boolean
    default: true
  - name: addRoleAssignments
    displayName: Add Role Assignments?
    type: boolean
    default: true
  - name: publicAccessEnabled
    displayName: Make Web Apps Public?
    type: boolean
    default: true
  - name: runMSDevSecOpsScan
    displayName: Run MS DevSecOps Scan?
    type: boolean
    default: false

# ----------------------------------------------------------------------------------------------------
variables:
  - group: AI.LZ.Secrets
  - template: vars/var-service-connections.yml

# ----------------------------------------------------------------------------------------------------
stages:
  - ${{ if ne(parameters.deployToEnvironment, 'DEV-QA-PROD') }}:
      - template: pipes/infra-only-pipe.yml
        parameters:
          environments: ['${{ parameters.deployToEnvironment }}']
          bicepVersion: '${{ parameters.bicepVersion }}'
          singleEnvironment: 'true'
          createResourceGroup: ${{ parameters.createResourceGroup }}
          publicAccessEnabled: ${{ parameters.publicAccessEnabled }}
          appsToDeploy: ${{ parameters.appsToDeploy }}
          addRoleAssignments: ${{ parameters.addRoleAssignments }}
          runMSDevSecOpsScan: ${{ parameters.runMSDevSecOpsScan }}
          runGHASScan: false

  - ${{ if eq(parameters.deployToEnvironment, 'DEV-QA-PROD') }}:
      - template: pipes/infra-only-pipe.yml
        parameters:
          environments: ['DEV', 'QA', 'PROD']
          bicepVersion: '${{ parameters.bicepVersion }}'
          createResourceGroup: ${{ parameters.createResourceGroup }}
          publicAccessEnabled: ${{ parameters.publicAccessEnabled }}
          appsToDeploy: ${{ parameters.appsToDeploy }}
          addRoleAssignments: ${{ parameters.addRoleAssignments }}
          runMSDevSecOpsScan: ${{ parameters.runMSDevSecOpsScan }}
          runGHASScan: false
